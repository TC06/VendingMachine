<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

<!--
-->

<plugin>

	<extension
		id="dk.dtu.compute.mbse.yawl.pntd"
		name="YAWL Nets"
		point="org.pnml.tools.epnk.pntd">
		<type
			class="dk.dtu.compute.mbse.yawl.impl.YAWLNetImpl"
			description="YAWL Nets"/>
	</extension>

   <extension point="org.eclipse.emf.ecore.generated_package">
      <!-- @generated yawl -->
      <package
            uri="http://se.compute.dtu.dk/mbse/yawl"
            class="dk.dtu.compute.mbse.yawl.YawlPackage"
            genModel="model/yawl.genmodel"/>
   </extension>
   <!-- @author Harun s150366 -->
    <extension
         point="org.eclipse.emf.validation.constraintProviders">
      <constraintProvider
            cache="true">
         <!-- TODO this should be refering to the URI of your YAWL net model -->
         <package
               namespaceUri="http://se.compute.dtu.dk/mbse/yawl">
         </package>
         <constraints categories="org.pnml.tools.epnk.validation">
            <constraint
                  id="dk.dtu.compute.mbse.yawl.validation.correct-arc-connection"
                  isEnabledByDefault="true"
                  lang="OCL"
                  mode="Live"
                  name="Arc connection constraint for YAWL nets"
                  severity="ERROR"
                  statusCode="401">
               <message>
                  The arc {0} with this arc type is not allowed between these elements.
               </message>
               <description>
                  Arcs must be between a place and a transition, a transition and a place, or
                  between two transitions. Only arcs between a place and a transition may have
                  a type! 
               </description>
               <!-- TODO the class the constraint refers to: the Arc of your YWAL Ecore model,
                    the class name and the URI of the packake separated by a colon -->
               <target
                     class="Arc:http://se.compute.dtu.dk/mbse/yawl">
                  <!-- since this is a live constraint, you need to tell the
                       validator when to check the constraint: in terms of events here
                       we use set events on the following features -->
                  <event
                        name="Set">
                     <feature
                           name="source">
                     </feature>
                     <feature
                           name="target">
                     </feature>
                     <!-- TODO the feature "type" is the reference to the Attribute defining the type
                          of the arc) -->
                     <feature
                           name="type">
                     </feature>
                  </event>
               </target>
               <!-- The actual OCL constraint follows
               
                    TODO you might need to change self.type->size() which says that
                    you cannot set the type of an arc for arcs running from a tarnsition
                    to a place -->
               <![CDATA[
                 ( self.source.oclIsKindOf(pnmlcoremodel::PlaceNode) and
                   self.target.oclIsKindOf(pnmlcoremodel::TransitionNode) )
                 or
                 ( self.source.oclIsKindOf(pnmlcoremodel::TransitionNode) and
                   self.target.oclIsKindOf(pnmlcoremodel::PlaceNode) and
                   self.type->size() = 0 )
               ]]>
            </constraint>
            
            <!--  OCL constraint from 1. 
               ...
            -->
            <!-- TODO the class attribute of the constraint should be the fully qualified name
                      of the Java class implementing the constraint, checking start and
                      end places -->
            <constraint
                  lang="Java"
                  class="dk.dtu.compute.mbse.yawl.constraints.StartEndPlaces"
                  severity="ERROR"
                  mode="Batch"
                  name="One start and end place"
                  id="dk.dtu.compute.mbse.yawl.validation.one-start-and-end-place"
                  statusCode="402">
               <!-- TODO the class here needs to refer to Ecore class of the YAWL Petri net type
                    (name and URI of the package separated by a colon) -->
               <target class="YAWLNet:http://se.compute.dtu.dk/mbse/yawl"/>
               <description>
                  A YAWL net must have one start and end place.
               </description>
               <message>
                  The YAWL net {0} does not have exactly one start place and one end place.
               </message>
            </constraint>
            
         </constraints>
      </constraintProvider>
   </extension>
   

</plugin>
